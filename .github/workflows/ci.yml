name: build and push docker

on:
  push:
    branches: main
    tags:
      - v*
  schedule:
    - cron:  '0 0 * * SUN'

jobs:
  Anchore-Build-Scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2.4.0
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag localbuild/testimage:latest --build-arg TARGETARCH=amd64
    - name: Run the Anchore scan action itself with GitHub Advanced Security code scanning integration enabled
      uses: anchore/scan-action@main
      with:
        image: "localbuild/testimage:latest"
        acs-report-enable: true
        fail-build: false
    - name: Upload Anchore Scan Report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif
  multi-arch-build:
    runs-on: ubuntu-latest
    needs: Anchore-Build-Scan
    steps:
      - name: Get branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
      - name: Debug branch-tag
        run: echo ${{ env.BRANCH_NAME }}
      - name: Set docker tag for main branch
        if: ${{ env.BRANCH_NAME == 'main' }}
        shell: bash
        run: echo "DOCKERTAG=latest" >> $GITHUB_ENV
      - name: Set docker tag for github tags
        if: ${{ env.BRANCH_NAME != 'main' }}
        shell: bash
        run: echo "DOCKERTAG=$(echo "${{ env.BRANCH_NAME }}" | sed 's/refs-tags-v//')" >> $GITHUB_ENV
      - name: Debug docker tag
        run: echo ${{ env.DOCKERTAG }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.0
      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.0.0
        id: docker_build
        with:
          platforms: linux/arm/v7,linux/arm64,linux/amd64
          push: true
          tags: moafrancky/speedtest2mqtt:${{ env.DOCKERTAG }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
